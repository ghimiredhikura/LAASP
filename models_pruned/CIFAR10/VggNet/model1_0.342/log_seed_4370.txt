save path : C:/Deepak/VGG_PRUNE_30_NORETRAIN/model1_0.342
{'data_path': './data', 'dataset': 'cifar10', 'pretrain_path': 'none', 'ckpt_path': '', 'save_path': 'C:/Deepak/VGG_PRUNE_30_NORETRAIN/model1_0.342', 'mode': 'prune', 'batch_size': 256, 'test_batch_size': 256, 'verbose': False, 'total_epoches': 160, 'recover_epoch': 3, 'prune_epoch': 30, 'exp_round': 1, 'lr': 0.1, 'schedule': [40, 80, 120], 'gammas': [0.2, 0.2, 0.2], 'momentum': 0.9, 'decay': 0.0005, 'seed': 1, 'depth': 16, 'no_cuda': False, 'ngpu': 1, 'workers': 2, 'rate_flop': 0.342, 'manualSeed': 4370, 'cuda': True, 'use_cuda': True}
Random Seed: 4370
python version : 3.10.4 | packaged by conda-forge | (main, Mar 30 2022, 08:38:02) [MSC v.1916 64 bit (AMD64)]
torch  version : 1.12.0
cudnn  version : 8302
Pretrain path: none

==>>[2022-07-16 03:41:47] [Epoch=000/030] [Need: 00:00:00] [learning_rate=0.1000] [Best : Accuracy=44.92, Error=55.08]

==>>[2022-07-16 03:42:02] [Epoch=001/030] [Need: 00:09:07] [learning_rate=0.1000] [Best : Accuracy=54.69, Error=45.31]

==>>[2022-07-16 03:42:17] [Epoch=002/030] [Need: 00:07:59] [learning_rate=0.1000] [Best : Accuracy=72.27, Error=27.73]

==>>[2022-07-16 03:42:48] [Epoch=004/030] [Need: 00:06:58] [learning_rate=0.1000] [Best : Accuracy=73.85, Error=26.15]

==>>[2022-07-16 03:43:03] [Epoch=005/030] [Need: 00:06:38] [learning_rate=0.1000] [Best : Accuracy=73.86, Error=26.14]

==>>[2022-07-16 03:43:33] [Epoch=007/030] [Need: 00:06:01] [learning_rate=0.1000] [Best : Accuracy=79.40, Error=20.60]

==>>[2022-07-16 03:43:48] [Epoch=008/030] [Need: 00:05:43] [learning_rate=0.1000] [Best : Accuracy=80.70, Error=19.30]

==>>[2022-07-16 03:44:03] [Epoch=009/030] [Need: 00:05:26] [learning_rate=0.1000] [Best : Accuracy=82.71, Error=17.29]

==>>[2022-07-16 03:45:04] [Epoch=013/030] [Need: 00:04:22] [learning_rate=0.1000] [Best : Accuracy=83.01, Error=16.99]

==>>[2022-07-16 03:45:34] [Epoch=015/030] [Need: 00:03:51] [learning_rate=0.1000] [Best : Accuracy=83.27, Error=16.73]

==>>[2022-07-16 03:47:06] [Epoch=021/030] [Need: 00:02:18] [learning_rate=0.1000] [Best : Accuracy=83.77, Error=16.23]

==>>[2022-07-16 03:48:22] [Epoch=026/030] [Need: 00:01:01] [learning_rate=0.1000] [Best : Accuracy=85.27, Error=14.73]
=> network before pruning:
 vgg(
  (feature): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU(inplace=True)
    (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (7): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (8): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU(inplace=True)
    (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): ReLU(inplace=True)
    (13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (14): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (18): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (24): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): ReLU(inplace=True)
    (27): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (28): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (29): ReLU(inplace=True)
    (30): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): ReLU(inplace=True)
    (33): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (34): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): ReLU(inplace=True)
    (37): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (38): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (39): ReLU(inplace=True)
    (40): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): ReLU(inplace=True)
  )
  (classifier): Sequential(
    (0): Linear(in_features=512, out_features=512, bias=True)
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): Linear(in_features=512, out_features=10, bias=True)
  )
)
Baseline Model Flops: 626927616.000000

==>>[2022-07-16 03:50:19] [Epoch=030/033] [Need: 00:00:00] [learning_rate=0.1000] [Best : Accuracy=82.16, Error=17.84]

==>>[2022-07-16 03:50:49] [Epoch=032/033] [Need: 00:00:15] [learning_rate=0.1000] [Best : Accuracy=87.04, Error=12.96]

==>>[2022-07-16 03:52:41] [Epoch=030/033] [Need: 00:00:00] [learning_rate=0.1000] [Best : Accuracy=86.38, Error=13.62]

==>>[2022-07-16 03:54:59] [Epoch=030/033] [Need: 00:00:00] [learning_rate=0.1000] [Best : Accuracy=84.15, Error=15.85]

==>>[2022-07-16 03:55:14] [Epoch=031/033] [Need: 00:00:30] [learning_rate=0.1000] [Best : Accuracy=84.58, Error=15.42]

==>>[2022-07-16 03:58:02] [Epoch=030/033] [Need: 00:00:00] [learning_rate=0.1000] [Best : Accuracy=86.95, Error=13.05]

==>>[2022-07-16 04:01:13] [Epoch=030/033] [Need: 00:00:00] [learning_rate=0.1000] [Best : Accuracy=85.38, Error=14.62]

==>>[2022-07-16 04:04:20] [Epoch=030/033] [Need: 00:00:00] [learning_rate=0.1000] [Best : Accuracy=85.66, Error=14.34]

==>>[2022-07-16 04:06:49] [Epoch=030/033] [Need: 00:00:00] [learning_rate=0.1000] [Best : Accuracy=84.97, Error=15.03]

==>>[2022-07-16 04:07:25] [Epoch=032/033] [Need: 00:00:18] [learning_rate=0.1000] [Best : Accuracy=85.56, Error=14.44]

==>>[2022-07-16 04:10:14] [Epoch=030/033] [Need: 00:00:00] [learning_rate=0.1000] [Best : Accuracy=82.90, Error=17.10]

==>>[2022-07-16 04:13:01] [Epoch=030/033] [Need: 00:00:00] [learning_rate=0.1000] [Best : Accuracy=76.08, Error=23.92]

==>>[2022-07-16 04:13:19] [Epoch=031/033] [Need: 00:00:35] [learning_rate=0.1000] [Best : Accuracy=79.26, Error=20.74]

==>>[2022-07-16 04:13:36] [Epoch=032/033] [Need: 00:00:17] [learning_rate=0.1000] [Best : Accuracy=84.46, Error=15.54]
Prune Stats: {'l1norm': 160, 'l2norm': 308, 'eucl': 345, 'cos': 324}
Final Flop Reduction Rate: 0.3462
Conv Filters Before Pruning: {2: 64, 5: 64, 9: 128, 12: 128, 16: 256, 19: 256, 22: 256, 26: 512, 29: 512, 32: 512, 36: 512, 39: 512, 42: 512}
Conv Filters After Pruning: {2: 34, 5: 58, 9: 115, 12: 128, 16: 230, 19: 230, 22: 230, 26: 220, 29: 461, 32: 373, 36: 415, 39: 220, 42: 373}
Layerwise Pruning Rate: {2: 0.46875, 5: 0.09375, 9: 0.1015625, 12: 0.0, 16: 0.1015625, 19: 0.1015625, 22: 0.1015625, 26: 0.5703125, 29: 0.099609375, 32: 0.271484375, 36: 0.189453125, 39: 0.5703125, 42: 0.271484375}
=> network after pruning:
 vgg(
  (feature): Sequential(
    (0): Conv2d(3, 34, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(34, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): Conv2d(34, 58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (4): BatchNorm2d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU(inplace=True)
    (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (7): Conv2d(58, 115, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (8): BatchNorm2d(115, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): ReLU(inplace=True)
    (10): Conv2d(115, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (11): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): ReLU(inplace=True)
    (13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (14): Conv2d(128, 230, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (15): BatchNorm2d(230, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): ReLU(inplace=True)
    (17): Conv2d(230, 230, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (18): BatchNorm2d(230, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (19): ReLU(inplace=True)
    (20): Conv2d(230, 230, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (21): BatchNorm2d(230, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (22): ReLU(inplace=True)
    (23): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (24): Conv2d(230, 220, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (25): BatchNorm2d(220, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (26): ReLU(inplace=True)
    (27): Conv2d(220, 461, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (28): BatchNorm2d(461, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (29): ReLU(inplace=True)
    (30): Conv2d(461, 373, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (31): BatchNorm2d(373, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (32): ReLU(inplace=True)
    (33): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (34): Conv2d(373, 415, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (35): BatchNorm2d(415, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (36): ReLU(inplace=True)
    (37): Conv2d(415, 220, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (38): BatchNorm2d(220, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (39): ReLU(inplace=True)
    (40): Conv2d(220, 373, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (41): BatchNorm2d(373, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (42): ReLU(inplace=True)
  )
  (classifier): Sequential(
    (0): Linear(in_features=373, out_features=512, bias=True)
    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): Linear(in_features=512, out_features=10, bias=True)
  )
)

==>>[2022-07-16 04:14:49] [Epoch=030/160] [Need: 00:00:00] [learning_rate=0.1000] [Best : Accuracy=86.32, Error=13.68]

==>>[2022-07-16 04:16:17] [Epoch=035/160] [Need: 00:36:34] [learning_rate=0.1000] [Best : Accuracy=86.93, Error=13.07]

==>>[2022-07-16 04:17:45] [Epoch=040/160] [Need: 00:35:09] [learning_rate=0.0200] [Best : Accuracy=92.03, Error=7.97]

==>>[2022-07-16 04:18:37] [Epoch=043/160] [Need: 00:34:17] [learning_rate=0.0200] [Best : Accuracy=92.54, Error=7.46]

==>>[2022-07-16 04:29:26] [Epoch=080/160] [Need: 00:23:24] [learning_rate=0.0040] [Best : Accuracy=92.89, Error=7.11]

==>>[2022-07-16 04:29:44] [Epoch=081/160] [Need: 00:23:06] [learning_rate=0.0040] [Best : Accuracy=93.14, Error=6.86]

==>>[2022-07-16 04:30:02] [Epoch=082/160] [Need: 00:22:49] [learning_rate=0.0040] [Best : Accuracy=93.27, Error=6.73]

==>>[2022-07-16 04:30:37] [Epoch=084/160] [Need: 00:22:14] [learning_rate=0.0040] [Best : Accuracy=93.31, Error=6.69]

==>>[2022-07-16 04:31:47] [Epoch=088/160] [Need: 00:21:03] [learning_rate=0.0040] [Best : Accuracy=93.59, Error=6.41]

==>>[2022-07-16 04:32:57] [Epoch=092/160] [Need: 00:19:53] [learning_rate=0.0040] [Best : Accuracy=93.61, Error=6.39]

==>>[2022-07-16 04:33:32] [Epoch=094/160] [Need: 00:19:18] [learning_rate=0.0040] [Best : Accuracy=93.64, Error=6.36]

==>>[2022-07-16 04:34:59] [Epoch=099/160] [Need: 00:17:50] [learning_rate=0.0040] [Best : Accuracy=93.76, Error=6.24]

==>>[2022-07-16 04:41:24] [Epoch=121/160] [Need: 00:11:23] [learning_rate=0.0008] [Best : Accuracy=93.78, Error=6.22]

==>>[2022-07-16 04:41:42] [Epoch=122/160] [Need: 00:11:06] [learning_rate=0.0008] [Best : Accuracy=93.81, Error=6.19]

==>>[2022-07-16 04:41:59] [Epoch=123/160] [Need: 00:10:48] [learning_rate=0.0008] [Best : Accuracy=93.82, Error=6.18]

==>>[2022-07-16 04:42:17] [Epoch=124/160] [Need: 00:10:31] [learning_rate=0.0008] [Best : Accuracy=93.99, Error=6.01]

==>>[2022-07-16 04:47:15] [Epoch=141/160] [Need: 00:05:33] [learning_rate=0.0008] [Best : Accuracy=94.00, Error=6.00]

==>>[2022-07-16 04:47:49] [Epoch=143/160] [Need: 00:04:58] [learning_rate=0.0008] [Best : Accuracy=94.11, Error=5.89]
